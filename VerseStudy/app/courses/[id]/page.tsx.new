"use client"

import { useState } from "react"
import { useParams } from "next/navigation"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Button } from "@/components/ui/button"
import { Progress } from "@/components/ui/progress"
import { Badge } from "@/components/ui/badge"
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion"
import { PlayCircle, BookOpen, FileText, CheckCircle2 } from "lucide-react"
import { motion } from "framer-motion"

// Mock course data
const coursesData = {
  mathematics: {
    id: "mathematics",
    title: "Advanced Mathematics",
    description: "Master advanced mathematical concepts including calculus, linear algebra, and statistics.",
    instructor: "Dr. Sarah Johnson",
    instructorAvatar: "/placeholder.svg?height=40&width=40",
    rating: 4.8,
    reviews: 245,
    students: 1289,
    duration: "12 weeks",
    lastUpdated: "March 2023",
    progress: 65,
    level: "Intermediate",
    category: "Mathematics",
    tags: ["Calculus", "Linear Algebra", "Statistics"],
    modules: [
      {
        id: "module1",
        title: "Calculus Fundamentals",
        description: "Learn the basics of differential and integral calculus.",
        lessons: [
          { id: "lesson1", title: "Introduction to Limits", duration: "45 min", completed: true },
          { id: "lesson2", title: "Derivatives and Their Applications", duration: "1 hr", completed: true },
          { id: "lesson3", title: "Integration Techniques", duration: "1.5 hrs", completed: false },
          { id: "lesson4", title: "Applications of Integration", duration: "1 hr", completed: false },
        ],
      },
      {
        id: "module2",
        title: "Linear Algebra Essentials",
        description: "Explore vectors, matrices, and linear transformations.",
        lessons: [
          { id: "lesson5", title: "Vectors and Vector Spaces", duration: "1 hr", completed: false },
          { id: "lesson6", title: "Matrices and Linear Transformations", duration: "1.5 hrs", completed: false },
          { id: "lesson7", title: "Eigenvalues and Eigenvectors", duration: "1 hr", completed: false },
          { id: "lesson8", title: "Applications in Computer Graphics", duration: "1 hr", completed: false },
        ],
      },
      {
        id: "module3",
        title: "Statistical Methods",
        description: "Learn statistical analysis and probability theory.",
        lessons: [
          { id: "lesson9", title: "Probability Distributions", duration: "1 hr", completed: false },
          { id: "lesson10", title: "Hypothesis Testing", duration: "1.5 hrs", completed: false },
          { id: "lesson11", title: "Regression Analysis", duration: "1 hr", completed: false },
          { id: "lesson12", title: "Bayesian Statistics", duration: "1 hr", completed: false },
        ],
      },
    ],
    resources: [
      { id: "resource1", title: "Calculus Cheat Sheet", type: "PDF", size: "2.4 MB" },
      { id: "resource2", title: "Linear Algebra Formula Guide", type: "PDF", size: "1.8 MB" },
      { id: "resource3", title: "Statistical Tables", type: "Excel", size: "3.2 MB" },
      { id: "resource4", title: "Practice Problem Set", type: "PDF", size: "4.5 MB" },
    ],
    discussions: [
      {
        id: "discussion1",
        title: "Struggling with integration by parts",
        author: "Alex Chen",
        avatar: "/placeholder.svg?height=30&width=30",
        date: "2 days ago",
        replies: 8,
      },
      {
        id: "discussion2",
        title: "Applications of eigenvalues in real life",
        author: "Maria Garcia",
        avatar: "/placeholder.svg?height=30&width=30",
        date: "1 week ago",
        replies: 12,
      },
      {
        id: "discussion3",
        title: "Help with probability problem set",
        author: "James Wilson",
        avatar: "/placeholder.svg?height=30&width=30",
        date: "3 days ago",
        replies: 5,
      },
    ],
  },
  "computer-science": {
    id: "computer-science",
    title: "Introduction to Computer Science",
    description: "Learn the fundamentals of computer science, programming, and algorithms.",
    instructor: "Prof. Michael Chen",
    instructorAvatar: "/placeholder.svg?height=40&width=40",
    rating: 4.9,
    reviews: 312,
    students: 2145,
    duration: "10 weeks",
    lastUpdated: "January 2023",
    progress: 40,
    level: "Beginner",
    category: "Computer Science",
    tags: ["Programming", "Algorithms", "Data Structures"],
    modules: [
      {
        id: "module1",
        title: "Programming Fundamentals",
        description: "Learn the basics of programming with Python.",
        lessons: [
          { id: "lesson1", title: "Introduction to Programming", duration: "45 min", completed: true },
          { id: "lesson2", title: "Variables and Data Types", duration: "1 hr", completed: true },
          { id: "lesson3", title: "Control Structures", duration: "1 hr", completed: false },
          { id: "lesson4", title: "Functions and Modules", duration: "1.5 hrs", completed: false },
        ],
      },
      {
        id: "module2",
        title: "Data Structures",
        description: "Explore common data structures and their implementations.",
        lessons: [
          { id: "lesson5", title: "Arrays and Lists", duration: "1 hr", completed: false },
          { id: "lesson6", title: "Stacks and Queues", duration: "1 hr", completed: false },
          { id: "lesson7", title: "Trees and Graphs", duration: "1.5 hrs", completed: false },
          { id: "lesson8", title: "Hash Tables", duration: "1 hr", completed: false },
        ],
      },
      {
        id: "module3",
        title: "Algorithms",
        description: "Learn algorithm design and analysis.",
        lessons: [
          { id: "lesson9", title: "Sorting Algorithms", duration: "1.5 hrs", completed: false },
          { id: "lesson10", title: "Searching Algorithms", duration: "1 hr", completed: false },
          { id: "lesson11", title: "Dynamic Programming", duration: "2 hrs", completed: false },
          { id: "lesson12", title: "Graph Algorithms", duration: "1.5 hrs", completed: false },
        ],
      },
    ],
    resources: [
      { id: "resource1", title: "Python Cheat Sheet", type: "PDF", size: "1.5 MB" },
      { id: "resource2", title: "Data Structures Visualization", type: "Interactive", size: "Online" },
      { id: "resource3", title: "Algorithm Complexity Guide", type: "PDF", size: "2.1 MB" },
      { id: "resource4", title: "Practice Code Samples", type: "ZIP", size: "5.3 MB" },
    ],
    discussions: [
      {
        id: "discussion1",
        title: "Help with recursive functions",
        author: "Emma Wilson",
        avatar: "/placeholder.svg?height=30&width=30",
        date: "3 days ago",
        replies: 10,
      },
      {
        id: "discussion2",
        title: "Best way to implement a binary tree?",
        author: "David Kim",
        avatar: "/placeholder.svg?height=30&width=30",
        date: "5 days ago",
        replies: 15,
      },
      {
        id: "discussion3",
        title: "Time complexity of my sorting algorithm",
        author: "Priya Patel",
        avatar: "/placeholder.svg?height=30&width=30",
        date: "1 week ago",
        replies: 7,
      },
    ],
  },
  history: {
    id: "history",
    title: "World History: Ancient Civilizations",
    description: "Explore the rise and fall of ancient civilizations and their impact on modern society.",
    instructor: "Dr. Robert Thompson",
    instructorAvatar: "/placeholder.svg?height=40&width=40",
    rating: 4.7,
    reviews: 189,
    students: 876,
    duration: "8 weeks",
    lastUpdated: "February 2023",
    progress: 25,
    level: "Beginner",
    category: "History",
    tags: ["Ancient History", "Archaeology", "Civilizations"],
    modules: [
      {
        id: "module1",
        title: "Mesopotamia and Egypt",
        description: "Explore the cradles of civilization in the ancient Near East.",
        lessons: [
          { id: "lesson1", title: "The Rise of Mesopotamian City-States", duration: "1 hr", completed: true },
          { id: "lesson2", title: "Ancient Egyptian Dynasties", duration: "1.5 hrs", completed: false },
          { id: "lesson3", title: "Religion and Culture in the Ancient Near East", duration: "1 hr", completed: false },
          { id: "lesson4", title: "Trade and Warfare", duration: "1 hr", completed: false },
        ],
      },
      {
        id: "module2",
        title: "Greece and Rome",
        description: "Study the classical civilizations of the Mediterranean.",
        lessons: [
          { id: "lesson5", title: "The Greek City-States", duration: "1 hr", completed: false },
          { id: "lesson6", title: "The Roman Republic", duration: "1.5 hrs", completed: false },
          { id: "lesson7", title: "The Roman Empire", duration: "1.5 hrs", completed: false },
          { id: "lesson8", title: "Legacy of Classical Civilizations", duration: "1 hr", completed: false },
        ],
      },
      {
        id: "module3",
        title: "Ancient Asia",
        description: "Discover the ancient civilizations of China and India.",
        lessons: [
          { id: "lesson9", title: "Early Chinese Dynasties", duration: "1.5 hrs", completed: false },
          { id: "lesson10", title: "The Indus Valley Civilization", duration: "1 hr", completed: false },
          { id: "lesson11", title: "Buddhism and Hinduism", duration: "1 hr", completed: false },
          { id: "lesson12", title: "Trade Routes and Cultural Exchange", duration: "1 hr", completed: false },
        ],
      },
    ],
    resources: [
      { id: "resource1", title: "Ancient Civilizations Timeline", type: "PDF", size: "3.2 MB" },
      { id: "resource2", title: "Archaeological Site Maps", type: "PDF", size: "5.7 MB" },
      { id: "resource3", title: "Primary Source Documents", type: "PDF", size: "4.1 MB" },
      { id: "resource4", title: "Ancient Art Gallery", type: "Interactive", size: "Online" },
    ],
    discussions: [
      {
        id: "discussion1",
        title: "Were the pyramids built by aliens?",
        author: "Tom Jackson",
        avatar: "/placeholder.svg?height=30&width=30",
        date: "1 week ago",
        replies: 23,
      },
      {
        id: "discussion2",
        title: "Most influential Roman emperor?",
        author: "Sophia Rodriguez",
        avatar: "/placeholder.svg?height=30&width=30",
        date: "4 days ago",
        replies: 18,
      },
      {
        id: "discussion3",
        title: "Comparing Greek and Chinese philosophy",
        author: "Marcus Chen",
        avatar: "/placeholder.svg?height=30&width=30",
        date: "2 days ago",
        replies: 9,
      },
    ],
  },
}

export default function CourseDetailPage() {
  const { id } = useParams()
  const [activeTab, setActiveTab] = useState("content")

  // Get course data based on ID
  const courseId = Array.isArray(id) ? id[0] : id
  const course = coursesData[courseId as keyof typeof coursesData] || coursesData.mathematics

  const container = {
    hidden: { opacity: 0 },
    show: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
      },
    },
  }

  const item = {
    hidden: { opacity: 0, y: 20 },
    show: { opacity: 1, y: 0 },
  }

  return (
    <div className="container mx-auto space-y-6">
      <div className="flex flex-col space-y-2">
        <div className="flex items-center space-x-2">
          <Badge variant="outline">{course.level}</Badge>
          <Badge variant="outline">{course.category}</Badge>
        </div>
        <h1 className="text-3xl font-bold tracking-tight">{course.title}</h1>
        <p className="text-muted-foreground">{course.description}</p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div className="md:col-span-2 space-y-6">
          <Card>
            <CardHeader className="pb-2">
              <div className="flex justify-between items-center">
                <CardTitle>Your Progress</CardTitle>
                <Badge variant="outline">{course.progress}% Complete</Badge>
              </div>
            </CardHeader>
            <CardContent>
              <Progress value={course.progress} className="h-2 mb-2" />
              <div className="flex justify-between text-sm text-muted-foreground">
                <span>0%</span>
                <span>100%</span>
              </div>
              <div className="mt-4 flex justify-between">
                <Button>
                  <PlayCircle className="mr-2 h-4 w-4" />
                  Continue Learning
                </Button>
                <Button variant="outline">
                  <BookOpen className="mr-2 h-4 w-4" />
                  View Certificate
                </Button>
              </div>
            </CardContent>
          </Card>

          <Tabs value={activeTab} onValueChange={setActiveTab}>
            <TabsList className="mb-4">
              <TabsTrigger value="content">Course Content</TabsTrigger>
              <TabsTrigger value="resources">Resources</TabsTrigger>
              <TabsTrigger value="discussions">Discussions</TabsTrigger>
            </TabsList>

            <TabsContent value="content" className="space-y-4">
              <motion.div variants={container} initial="hidden" animate="show" className="space-y-4">
                {course.modules.map((module) => (
                  <motion.div key={module.id} variants={item}>
                    <Accordion type="single" collapsible>
                      <AccordionItem value={module.id}>
                        <AccordionTrigger>
                          <div className="flex flex-col items-start text-left">
                            <div className="font-medium">{module.title}</div>
                            <div className="text-sm text-muted-foreground">{module.description}</div>
                          </div>
                        </AccordionTrigger>
                        <AccordionContent>
                          <div className="space-y-2 pt-2">
                            {module.lessons.map((lesson) => (
                              <Card key={lesson.id} className="overflow-hidden">
                                <CardContent className="p-0">
                                  <div className="flex items-center p-4">
                                    <div
                                      className={`h-10 w-10 rounded-full flex items-center justify-center ${lesson.completed ? "bg-green-100 text-green-600" : "bg-blue-100 text-blue-600"}`}
                                    >
                                      {lesson.completed ? (
                                        <CheckCircle2 className="h-5 w-5" />
                                      ) : (
                                        <PlayCircle className="h-5 w-5" />
                                      )}
                                    </div>
                                    <div className="ml-4 flex-1">
                                      <div className="flex items-center justify-between">
                                        <div>
                                          <p
                                            className={`font-medium ${lesson.completed ? "line-through text-muted-foreground" : ""}`}
                                          >
                                            {lesson.title}
                                          </p>
                                        </div>
                                        <div className="flex items-center">
                                          <Badge variant="outline">{lesson.duration}</Badge>
                                          <Button variant="ghost" size="sm" className="ml-2">
                                            {lesson.completed ? "Review" : "Start"}
                                          </Button>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </CardContent>
                              </Card>
                            ))}
                          </div>
                        </AccordionContent>
                      </AccordionItem>
                    </Accordion>
                  </motion.div>
                ))}
              </motion.div>
            </TabsContent>

            <TabsContent value="resources" className="space-y-4">
              <Card>
                <CardHeader>
                  <CardTitle>Course Resources</CardTitle>
                  <CardDescription>Download supplementary materials for your studies</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    {course.resources.map((resource) => (
                      <div key={resource.id} className="flex items-center justify-between p-2 border rounded-md">
                        <div className="flex items-center">
                          <FileText className="h-5 w-5 mr-3 text-blue-500" />
                          <div>
                            <p className="font-medium">{resource.title}</p>
                            <p className="text-xs text-muted-foreground">
                              {resource.type} · {resource.size}
                            </p>
                          </div>
                        </div>
                        <Button variant="outline" size="sm">
                          Download
                        </Button>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </TabsContent>

            <TabsContent value="discussions" className="space-y-4">
              <Card>
                <CardHeader className="pb-2">
                  <div className="flex justify-between items-center">
                    <CardTitle>Discussion Forum</CardTitle>
                    <Button size="sm">New Topic</Button>
                  </div>
                  <CardDescription>Ask questions and discuss course topics with peers</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    {course.discussions.map((discussion) => (
                      <div key={discussion.id} className="flex items-start space-x-3 p-3 border rounded-md">
                        <Avatar className="h-8 w-8">
                          <AvatarImage src={discussion.avatar} alt={discussion.author} />
                          <AvatarFallback>{discussion.author.substring(0, 2)}</AvatarFallback>
                        </Avatar>
                        <div className="flex-1">
                          <div className="flex justify-between items-start">
                            <div>
                              <p className="font-medium">{discussion.title}</p>
                              <p className="text-xs text-muted-foreground">
                                By {discussion.author} · {discussion.date}
                              </p>
                            </div>
                            <Badge variant="secondary">{discussion.replies} replies</Badge>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </TabsContent>
          </Tabs>
        </div>

        <div className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>Course Information</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="flex items-center space-x-3">
                <Avatar className="h-12 w-12">
                  <AvatarImage src={course.instructorAvatar} alt={course.instructor} />
                  <AvatarFallback>{course.instructor.substring(0, 2)}</AvatarFallback>
                </Avatar>
                <div>
                  <p className="font-medium">{course.instructor}</p>
                  <p className="text-sm text-muted-foreground">Instructor</p>
                </div>
              </div>

              <div className="grid grid-cols-2 gap-4 pt-2">
                <div className="flex flex-col">
                  <span className="text-sm text-muted-foreground">Rating</span>
                  <span className="font-medium">
                    {course.rating}/5.0 ({course.reviews} reviews)
                  </span>
                </div>
                <div className="flex flex-col">
                  <span className="text-sm text-muted-foreground">Students</span>
                  <span className="font-medium">{course.students.toLocaleString()}</span>
                </div>
                <div className="flex flex-col">
                  <span className="text-sm text-muted-foreground">Duration</span>
                  <span className="font-medium">{course.duration}</span>
                </div>
                <div className="flex flex-col">
                  <span className="text-sm text-muted-foreground">Last Updated</span>
                  <span className="font-medium">{course.lastUpdated}</span>
                </div>
              </div>

              <div className="pt-2">
                <p className="text-sm text-muted-foreground mb-2">Tags</p>
                <div className="flex flex-wrap gap-2">
                  {course.tags.map((tag) => (
                    <Badge key={tag} variant="secondary">
                      {tag}
                    </Badge>
                  ))}
                </div>
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle>What You'll Learn</CardTitle>
            </CardHeader>
            <CardContent>
              <ul className="space-y-2">
                <li className="flex items-start">
                  <CheckCircle2 className="h-5 w-5 mr-2 text-green-500 shrink-0" />
                  <span>Master key concepts in {course.category}</span>
                </li>
                <li className="flex items-start">
                  <CheckCircle2 className="h-5 w-5 mr-2 text-green-500 shrink-0" />
                  <span>Apply theoretical knowledge to practical problems</span>
                </li>
                <li className="flex items-start">
                  <CheckCircle2 className="h-5 w-5 mr-2 text-green-500 shrink-0" />
                  <span>Develop critical thinking and analytical skills</span>
                </li>
                <li className="flex items-start">
                  <CheckCircle2 className="h-5 w-5 mr-2 text-green-500 shrink-0" />
                  <span>Prepare for advanced studies in this field</span>
                </li>
              </ul>
            </CardContent>
          </Card>

          <Card>
            <CardContent className="p-4">
              <Button className="w-full">Enroll in Course</Button>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  )
}

